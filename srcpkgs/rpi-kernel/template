# Template file for 'rpi-kernel'
#
# We track the latest Raspberry Pi LTS kernel as that is what is used in the
# official Raspbian distribution. This is currently 5.4:
#
#   https://www.raspberrypi.org/forums/viewtopic.php?f=29&t=269769

_githash="76c49e60e742d0bebd798be972d67dd3fd007691"
_gitshort="${_githash:0:7}"

pkgname=rpi-kernel
version=5.4.83
revision=1
archs="armv6l* armv7l* aarch64*"
build_style=linux
build_helper=linux
wrksrc="linux-${_githash}"
maintainer="Piraty <piraty1@inbox.ru>"
homepage="http://www.kernel.org"
license="GPL-2.0-only"
short_desc="The Linux kernel for Raspberry Pi (${version%.*} series [git ${_gitshort}])"
distfiles="https://github.com/raspberrypi/linux/archive/${_githash}.tar.gz"
checksum=4a98ea0d68c6e74d479789c12fc97619c872cb2607ae87a881a9491c1c3fbc35
python_version=2

_kernver="${version}_${revision}"

nodebug=yes
nostrip=yes
noverifyrdeps=yes
noshlibprovides=yes

hostmakedepends="perl kmod uboot-mkimage openssl-devel bc bison flex"
makedepends="ncurses-devel"
triggers="kernel-hooks"
# These files could be modified when an external module is built.
mutable_files="
	/usr/lib/modules/${_kernver}/modules.dep
	/usr/lib/modules/${_kernver}/modules.dep.bin
	/usr/lib/modules/${_kernver}/modules.symbols
	/usr/lib/modules/${_kernver}/modules.symbols.bin
	/usr/lib/modules/${_kernver}/modules.alias
	/usr/lib/modules/${_kernver}/modules.alias.bin
	/usr/lib/modules/${_kernver}/modules.devname"

# reproducible build
export KBUILD_BUILD_TIMESTAMP=${SOURCE_DATE_EPOCH:-0}
export KBUILD_BUILD_USER=voidlinux
export KBUILD_BUILD_HOST=voidlinux

pre_configure() {
	# Use upstream's default configuration, no need to maintain ours.
	case "$XBPS_TARGET_MACHINE" in
		# RPi3
		aarch64*)
			kernel_config_target=bcmrpi3_defconfig
			;;
		# RPi2 / RPi3
		armv7l*)
			kernel_config_target=bcm2709_defconfig
			;;
		# RPi1
		armv6l*)
			kernel_config_target=bcmrpi_defconfig
			;;
	esac

	defconfig="arch/${kernel_arch}/configs/${kernel_config_target}"

	echo "CONFIG_CONNECTOR=y" >> "$defconfig"
	echo "CONFIG_PROC_EVENTS=y" >> "$defconfig"
	echo "CONFIG_F2FS_FS_SECURITY=y" >> "$defconfig"
	echo "CONFIG_CGROUP_PIDS=y" >> "$defconfig"
	
	# IR Remote Support
	echo "CONFIG_RC_CORE=y" >> "$defconfig"
	echo "CONFIG_LIRC=y" >> "$defconfig"
	echo "CONFIG_RC_DECODERS=y" >> "$defconfig"
	echo "CONFIG_RC_DEVICES=y" >> "$defconfig"
	echo "CONFIG_IR_RC6_DECODER=m" >> "$defconfig"
	echo "CONFIG_IR_MCEUSB=m" >> "$defconfig"

	# HID Controllers
	echo "CONFIG_HID_STEAM=y" >> "$defconfig"

	# LXD 4.2+ support
	echo "CONFIG_BRIDGE_VLAN_FILTERING=y" >> "$defconfig"
}

post_install() {
	rm -rf "$DESTDIR/boot/"
	case "$XBPS_TARGET_MACHINE" in
		aarch64*)
			vinstall arch/arm64/boot/Image 644 boot kernel8.img
			;;
		armv7l*)
			vinstall arch/arm/boot/zImage 644 boot kernel7.img
			;;
		armv6l*)
			vinstall arch/arm/boot/zImage 644 boot kernel.img
			;;
	esac

	# install device tree blobs
	make $makejobs ARCH=${kernel_arch} INSTALL_DTBS_PATH=${DESTDIR}/boot dtbs_install

	# some dtbs end up in /boot/broadcom
	case "$XBPS_TARGET_MACHINE" in
		aarch64*)
			mv ${DESTDIR}/boot/broadcom/bcm*-rpi-*.dtb ${DESTDIR}/boot
			rm -rf ${DESTDIR}/boot/broadcom
			;;
	esac

	#FIXME: purge ${DESTDIR}/lib/firmware ??
}

rpi-kernel-headers_package() {
	nostrip=yes
	noverifyrdeps=yes
	noshlibprovides=yes
	short_desc="The Linux kernel headers for Raspberry Pi (${version%.*} series [git ${_gitshort}])"
	pkg_install() {
		vmove usr/src
		vmove usr/lib/modules/${_kernver}/build
	}
}
